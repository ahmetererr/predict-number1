{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/predict-number1/web/src/components/PredictionDisplay.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionDisplay = ({\n  prediction,\n  confidence\n}) => {\n  if (prediction === null) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 p-4 bg-white dark:bg-gray-800 rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold text-gray-800 dark:text-white mb-2\",\n      children: \"Prediction Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-600 dark:text-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-3xl font-bold mb-2\",\n        children: [\"Digit: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Confidence: \", (confidence * 100).toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = PredictionDisplay;\nexport default PredictionDisplay;\nvar _c;\n$RefreshReg$(_c, \"PredictionDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PredictionDisplay","prediction","confidence","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["/Users/ahmet/predict-number1/web/src/components/PredictionDisplay.tsx"],"sourcesContent":["import React from 'react';\n\ninterface PredictionDisplayProps {\n  prediction: number | null;\n  confidence: number;\n}\n\nconst PredictionDisplay: React.FC<PredictionDisplayProps> = ({\n  prediction,\n  confidence,\n}) => {\n  if (prediction === null) return null;\n\n  return (\n    <div className=\"mt-6 p-4 bg-white dark:bg-gray-800 rounded-lg shadow\">\n      <h2 className=\"text-xl font-semibold text-gray-800 dark:text-white mb-2\">\n        Prediction Result\n      </h2>\n      <div className=\"text-gray-600 dark:text-gray-300\">\n        <p className=\"text-3xl font-bold mb-2\">Digit: {prediction}</p>\n        <p>Confidence: {(confidence * 100).toFixed(2)}%</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PredictionDisplay; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,iBAAmD,GAAGA,CAAC;EAC3DC,UAAU;EACVC;AACF,CAAC,KAAK;EACJ,IAAID,UAAU,KAAK,IAAI,EAAE,OAAO,IAAI;EAEpC,oBACEF,OAAA;IAAKI,SAAS,EAAC,sDAAsD;IAAAC,QAAA,gBACnEL,OAAA;MAAII,SAAS,EAAC,0DAA0D;MAAAC,QAAA,EAAC;IAEzE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLT,OAAA;MAAKI,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC/CL,OAAA;QAAGI,SAAS,EAAC,yBAAyB;QAAAC,QAAA,GAAC,SAAO,EAACH,UAAU;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9DT,OAAA;QAAAK,QAAA,GAAG,cAAY,EAAC,CAACF,UAAU,GAAG,GAAG,EAAEO,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GAjBIV,iBAAmD;AAmBzD,eAAeA,iBAAiB;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}